// Generated by https://quicktype.io

import 'package:amacom_app/src/domain/entities/diagnosis.dart';
import 'package:amacom_app/src/utils/utils/global_locator.dart';

/// Situation entity
///
/// Used to manage Situations data
class Situation {
  ///
  Situation({
    required this.id,
    required this.personId,
    required this.createdById,
    required this.subjectId,
    this.currentDiagnosis,
    required this.description,
    required this.firstThought,
    required this.behavior,
    required this.affectationDegree,
    this.nursingAssessment,
    required this.createdAt,
    required this.updatedAt,
  });

  /// from Map (json) constructor
  factory Situation.fromJson(dynamic json) => Situation(
        id: json['id'],
        personId: json['personId'],
        createdById: json['createdById'],
        subjectId: json['subjectId'],
        description: json['description'],
        firstThought: json['firstThought'],
        behavior: json['behavior'],
        affectationDegree: json['affectationDegree'],
        createdAt: json['createdAt'],
        updatedAt: json['updatedAt'],
        currentDiagnosis: Diagnosis.fromJson(json['currentDiagnosis']),
      );

  ///
  String id;

  ///
  String personId;

  ///
  String createdById;

  ///
  String subjectId;

  ///
  Diagnosis? currentDiagnosis;

  ///
  String description;

  ///
  String firstThought;

  ///
  String behavior;

  ///
  int affectationDegree;

  ///
  dynamic nursingAssessment;

  ///
  String createdAt;

  ///
  String updatedAt;

  /// Parse a list of entities from a Json List<Map>
  static List<Situation> fromJsonList(dynamic data) {
    final List<Situation> result = [];

    try {
      for (var element in (data as List)) {
        try {
          result.add(Situation.fromJson(element as Map));
        } catch (e) {
          GlobalLocator.appLogger.e(e);
        }
      }
    } catch (e) {
      GlobalLocator.appLogger.e(e);
    }

    return result;
  }
}
